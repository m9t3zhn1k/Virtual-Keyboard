{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://virtual-keyboard/./src/application/application.html","webpack://virtual-keyboard/./src/application/components/keyboard/keyCodes.js","webpack://virtual-keyboard/./src/application/components/button/Button.js","webpack://virtual-keyboard/./src/application/components/keyboard/keyChars.js","webpack://virtual-keyboard/./src/application/components/keyboard/Keyboard.js","webpack://virtual-keyboard/./src/index.js","webpack://virtual-keyboard/./src/application/application.js"],"sourcesContent":["// Module\nvar code = \"<header class=\\\"header\\\"> <div class=\\\"container\\\"> <h1 class=\\\"header__title\\\">Virtual Keyboard</h1> </div> </header> <main class=\\\"main\\\"> <div class=\\\"container\\\"> <p class=\\\"description\\\"> The Virtual Keyboard was created in Windows OS. <br> Press <b>Ctrl + Alt</b> to change the keyboard layout. </p> <textarea class=\\\"textarea\\\" id=\\\"textarea\\\" cols=\\\"45\\\" rows=\\\"8\\\"></textarea> </div> </main> <footer class=\\\"footer\\\"> <div class=\\\"container\\\"> <p class=\\\"footer__copy\\\">2022 &copy;</p> </div> </footer>\";\n// Exports\nexport default code;","const keyCodes = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace', 'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'Delete', 'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Enter', 'ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ArrowUp', 'ShiftRight', 'ControlLeft', 'MetaLeft', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'];\r\n\r\nexport default keyCodes;\r\n","import keyCodes from '../keyboard/keyCodes';\r\n\r\nexport default class Button {\r\n  constructor(index) {\r\n    this.index = index;\r\n  }\r\n\r\n  createButton() {\r\n    const key = document.createElement('div');\r\n    const symbol = document.createElement('span');\r\n    key.append(symbol);\r\n    key.className = `keyboard__key ${keyCodes[this.index]}`;\r\n    key.dataset.code = `${keyCodes[this.index]}`;\r\n    return key;\r\n  }\r\n}\r\n","const keyCharsSmallEn = ['`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace', 'Tab', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\\\\', 'Del', 'CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', '\\'', 'Enter', 'Shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '&uarr;', 'Shift', 'Ctrl', 'Win', 'Alt', '', 'Alt', '&larr;', '&darr;', '&rarr;', 'Ctrl'];\r\nconst keyCharsLargeEn = ['~', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', 'Backspace', 'Tab', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', '|', 'Del', 'CapsLock', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '\"', 'Enter', 'Shift', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?', '&uarr;', 'Shift', 'Ctrl', 'Win', 'Alt', '', 'Alt', '&larr;', '&darr;', '&rarr;', 'Ctrl'];\r\nconst keyCharsSmallRu = ['ё', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace', 'Tab', 'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', '\\\\', 'Del', 'CapsLock', 'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', 'Enter', 'Shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', '.', '&uarr;', 'Shift', 'Ctrl', 'Win', 'Alt', '', 'Alt', '&larr;', '&darr;', '&rarr;', 'Ctrl'];\r\nconst keyCharsLargeRu = ['Ё', '!', '\"', '№', ';', '%', ':', '?', '*', '(', ')', '_', '+', 'Backspace', 'Tab', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', '/', 'Del', 'CapsLock', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Enter', 'Shift', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', ',', '&uarr;', 'Shift', 'Ctrl', 'Win', 'Alt', '', 'Alt', '&larr;', '&darr;', '&rarr;', 'Ctrl'];\r\n\r\nexport {\r\n  keyCharsSmallEn, keyCharsLargeEn, keyCharsSmallRu, keyCharsLargeRu,\r\n};\r\n","import Button from '../button/Button';\r\nimport keyCodes from './keyCodes';\r\nimport {\r\n  keyCharsSmallEn, keyCharsLargeEn, keyCharsSmallRu, keyCharsLargeRu,\r\n} from './keyChars';\r\n\r\nexport default class Keyboard {\r\n  lang = localStorage.getItem('lang') || 'en';\r\n\r\n  isCaps = false;\r\n\r\n  isShift = false;\r\n\r\n  constructor() {\r\n    this.keyboard = document.createElement('div');\r\n    this.addEventListeners();\r\n  }\r\n\r\n  addEventListeners = () => {\r\n    window.addEventListener('keydown', this.animatePressedButton);\r\n    window.addEventListener('keyup', this.animateUnpressedButton);\r\n    window.addEventListener('mousedown', this.animatePressedButtonClick);\r\n    window.addEventListener('mouseup', this.animateUnpressedButtonClick);\r\n    window.addEventListener('mouseout', this.animateUnpressedButtonClick);\r\n  };\r\n\r\n  createKeyboard = () => {\r\n    this.keyboard.className = 'keyboard keyboard__container';\r\n    keyCodes.forEach((code, index) => this.keyboard.append(new Button(index).createButton()));\r\n    this.updateKeyboard();\r\n    return this.keyboard;\r\n  };\r\n\r\n  updateKeyboard = () => {\r\n    const buttons = [...this.keyboard.children];\r\n    if (this.lang === 'en') {\r\n      buttons.map((key, index) => {\r\n        const button = key;\r\n        button.firstElementChild.innerHTML = `${keyCharsSmallEn[index]}`;\r\n        return button;\r\n      });\r\n      if (this.isCaps && !this.isShift) {\r\n        buttons.map((key) => {\r\n          const button = key;\r\n          if (button.firstElementChild.innerHTML.length === 1 && (button.firstElementChild.innerHTML.charCodeAt(0) >= 'a'.codePointAt(0) && button.firstElementChild.innerHTML.charCodeAt(0) <= 'z'.codePointAt(0))) {\r\n            button.firstElementChild.innerHTML = button.firstElementChild.innerHTML.toUpperCase();\r\n          }\r\n          return button;\r\n        });\r\n      }\r\n      if (this.isShift && !this.isCaps) {\r\n        buttons.map((key, index) => {\r\n          const button = key;\r\n          button.firstElementChild.innerHTML = `${keyCharsLargeEn[index]}`;\r\n          return button;\r\n        });\r\n      }\r\n      if (this.isCaps && this.isShift) {\r\n        buttons.map((key, index) => {\r\n          const button = key;\r\n          button.firstElementChild.innerHTML = `${keyCharsLargeEn[index]}`;\r\n          if (button.firstElementChild.innerHTML.length === 1 && (button.firstElementChild.innerHTML.charCodeAt(0) >= 'A'.codePointAt(0) && button.firstElementChild.innerHTML.charCodeAt(0) <= 'Z'.codePointAt(0))) {\r\n            button.firstElementChild.innerHTML = button.firstElementChild.innerHTML.toLowerCase();\r\n          }\r\n          return button;\r\n        });\r\n      }\r\n    }\r\n    if (this.lang === 'ru') {\r\n      buttons.map((key, index) => {\r\n        const button = key;\r\n        button.firstElementChild.innerHTML = `${keyCharsSmallRu[index]}`;\r\n        return button;\r\n      });\r\n      if (this.isCaps && !this.isShift) {\r\n        buttons.map((key) => {\r\n          const button = key;\r\n          if (button.firstElementChild.innerHTML.length === 1 && (button.firstElementChild.innerHTML.charCodeAt(0) >= 'а'.codePointAt(0) && button.firstElementChild.innerHTML.charCodeAt(0) <= 'ё'.codePointAt(0))) {\r\n            button.firstElementChild.innerHTML = button.firstElementChild.innerHTML.toUpperCase();\r\n          }\r\n          return button;\r\n        });\r\n      }\r\n      if (this.isShift && !this.isCaps) {\r\n        buttons.map((key, index) => {\r\n          const button = key;\r\n          button.firstElementChild.innerHTML = `${keyCharsLargeRu[index]}`;\r\n          return button;\r\n        });\r\n      }\r\n      if (this.isCaps && this.isShift) {\r\n        buttons.map((key, index) => {\r\n          const button = key;\r\n          button.firstElementChild.innerHTML = `${keyCharsLargeRu[index]}`;\r\n          if (button.firstElementChild.innerHTML.length === 1) {\r\n            if ((button.firstElementChild.innerHTML.charCodeAt(0) >= 'А'.codePointAt(0) && button.firstElementChild.innerHTML.charCodeAt(0) <= 'Я'.codePointAt(0)) || button.firstElementChild.innerHTML.charCodeAt(0) === 'Ё'.codePointAt(0)) {\r\n              button.firstElementChild.innerHTML = button.firstElementChild.innerHTML.toLowerCase();\r\n            }\r\n          }\r\n          return button;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  changeKeyBoardLayout = (event) => {\r\n    const isControlLeft = this.keyboard.querySelector('.ControlLeft').classList.contains('active');\r\n    const isControlRight = this.keyboard.querySelector('.ControlRight').classList.contains('active');\r\n    const isAltLeft = this.keyboard.querySelector('.AltLeft').classList.contains('active');\r\n    const isAltRight = this.keyboard.querySelector('.AltRight').classList.contains('active');\r\n    const isShiftLeft = this.keyboard.querySelector('.ShiftLeft').classList.contains('active');\r\n    const isShiftRight = this.keyboard.querySelector('.ShiftRight').classList.contains('active');\r\n    const isCapsLock = this.keyboard.querySelector('.CapsLock').classList.contains('active');\r\n    if (((isControlLeft || isControlRight) && (isAltRight || isAltLeft)) && !event.repeat) {\r\n      this.lang = this.lang === 'en' ? 'ru' : 'en';\r\n      localStorage.setItem('lang', this.lang);\r\n      this.updateKeyboard();\r\n    }\r\n    if (event.code === 'ShiftLeft' || event.code === 'ShiftRight' || event.code === 'CapsLock') {\r\n      if (((isShiftLeft || isShiftRight) || isCapsLock) && !event.repeat) {\r\n        this.isUppercase = !this.isUppercase;\r\n        this.updateKeyboard();\r\n      } else if (!((isShiftLeft || isShiftRight) || isCapsLock) && !event.repeat) {\r\n        this.isUppercase = false;\r\n        this.updateKeyboard();\r\n      }\r\n    }\r\n  };\r\n\r\n  animatePressedButton = (event) => {\r\n    const button = this.keyboard.querySelector(`.keyboard__key.${event.code}`);\r\n    if (button && !event.repeat) {\r\n      if (button.classList.contains('CapsLock') && button.classList.contains('active')) {\r\n        event.preventDefault();\r\n        button.classList.remove('active');\r\n        this.isCaps = false;\r\n        this.changeKeyBoardLayout(event);\r\n        return;\r\n      }\r\n      if (button.classList.contains('CapsLock')) {\r\n        this.isCaps = true;\r\n      }\r\n      if (button.classList.contains('ShiftLeft') || button.classList.contains('ShiftRight')) {\r\n        this.isShift = true;\r\n      }\r\n      event.preventDefault();\r\n      button.classList.add('active');\r\n      this.changeKeyBoardLayout(event);\r\n    }\r\n  };\r\n\r\n  animateUnpressedButton = (event) => {\r\n    const button = this.keyboard.querySelector(`.keyboard__key.${event.code}.active`);\r\n    if (button && !event.repeat) {\r\n      if (button.classList.contains('CapsLock')) {\r\n        return;\r\n      }\r\n      if (button.classList.contains('ShiftLeft') || button.classList.contains('ShiftRight')) {\r\n        this.isShift = false;\r\n      }\r\n      event.preventDefault();\r\n      button.classList.remove('active');\r\n      this.changeKeyBoardLayout(event);\r\n    }\r\n  };\r\n\r\n  animatePressedButtonClick = (event) => {\r\n    const button = event.target.closest('.keyboard__key');\r\n    if (button) {\r\n      event.preventDefault();\r\n      button.classList.add('active');\r\n      this.changeKeyBoardLayout(event);\r\n    }\r\n  };\r\n\r\n  animateUnpressedButtonClick = (event) => {\r\n    const button = event.target.closest('.keyboard__key');\r\n    if (button) {\r\n      button.classList.remove('active');\r\n      this.changeKeyBoardLayout(event);\r\n    }\r\n  };\r\n}\r\n","import Application from './application/application';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nroot.innerHTML = new Application().innerHTML;\r\n","import AppHTML from './application.html';\r\nimport '../styles/styles.scss';\r\nimport Keyboard from './components/keyboard/Keyboard';\r\n\r\nexport default class Application {\r\n  innerHTML = AppHTML;\r\n\r\n  constructor() {\r\n    setTimeout(this.addKeyboard, 0);\r\n  }\r\n\r\n  addKeyboard = () => {\r\n    this.container = document.querySelector('.main > .container');\r\n    const keyboard = new Keyboard().createKeyboard();\r\n    this.container.append(keyboard);\r\n  };\r\n}\r\n"],"names":["Button","constructor","index","this","createButton","key","document","createElement","symbol","append","className","dataset","code","keyCharsSmallEn","keyCharsLargeEn","keyCharsSmallRu","keyCharsLargeRu","Keyboard","lang","localStorage","getItem","isCaps","isShift","keyboard","addEventListeners","window","addEventListener","animatePressedButton","animateUnpressedButton","animatePressedButtonClick","animateUnpressedButtonClick","createKeyboard","updateKeyboard","buttons","children","map","button","firstElementChild","innerHTML","length","charCodeAt","codePointAt","toUpperCase","toLowerCase","changeKeyBoardLayout","event","isControlLeft","querySelector","classList","contains","isControlRight","isAltLeft","isAltRight","isShiftLeft","isShiftRight","isCapsLock","repeat","setItem","isUppercase","preventDefault","remove","add","target","closest","getElementById","setTimeout","addKeyboard","container"],"sourceRoot":""}