{"version":3,"file":"main.bundle.js","mappings":"mBAGA,MCHMA,EAAW,CAAC,YAAa,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,YAAa,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,cAAe,eAAgB,YAAa,SAAU,WAAY,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,YAAa,QAAS,QAAS,YAAa,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,SAAU,QAAS,UAAW,aAAc,cAAe,WAAY,UAAW,QAAS,WAAY,YAAa,YAAa,aAAc,gBCAznBC,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,YAAa,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAAO,WAAY,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,QAAS,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,QAAS,OAAQ,MAAO,MAAO,GAAI,MAAO,SAAU,SAAU,SAAU,QCGlY,MAAMC,EACnBC,YAAYC,GACVC,KAAKD,MAAQA,EAGfE,eACE,MAAMC,EAAMC,SAASC,cAAc,OAC7BC,EAASF,SAASC,cAAc,QAItC,OAHAC,EAAOC,UAAY,GAAGV,EAAgBI,KAAKD,SAC3CG,EAAIK,OAAOF,GACXH,EAAIM,UAAY,iBAAiBb,EAASK,KAAKD,SACxCG,GCXI,MAAMO,EACnBX,cACEE,KAAKU,SAAWP,SAASC,cAAc,OACvCJ,KAAKW,oBAGPA,kBAAoB,KAClBC,OAAOC,iBAAiB,UAAWb,KAAKc,sBACxCF,OAAOC,iBAAiB,QAASb,KAAKe,wBACtCH,OAAOC,iBAAiB,YAAab,KAAKgB,2BAC1CJ,OAAOC,iBAAiB,UAAWb,KAAKiB,6BACxCL,OAAOC,iBAAiB,WAAYb,KAAKiB,8BAG3CC,eAAiB,KACflB,KAAKU,SAASF,UAAY,+BAC1Bb,EAASwB,SAAQ,CAACC,EAAMrB,IAAUC,KAAKU,SAASH,OAAO,IAAIV,EAAOE,GAAOE,kBAClED,KAAKU,UAGdI,qBAAuB,KACrB,MAAMO,EAASrB,KAAKU,SAASY,cAAc,kBAAkBC,MAAMH,QAC/DC,IACFE,MAAMC,iBACNH,EAAOI,UAAUC,IAAI,YAIzBX,uBAAyB,KACvB,MAAMM,EAASrB,KAAKU,SAASY,cAAc,kBAAkBC,MAAMH,eAC/DC,IACFE,MAAMC,iBACNH,EAAOI,UAAUE,OAAO,YAI5BX,0BAA4B,KAC1B,MAAMK,EAASE,MAAMK,OAAOC,QAAQ,kBAChCR,IACFE,MAAMC,iBACNH,EAAOI,UAAUC,IAAI,YAIzBT,4BAA8B,KAC5B,MAAMI,EAASE,MAAMK,OAAOC,QAAQ,kBAChCR,GACFA,EAAOI,UAAUE,OAAO,WChDjBxB,SAAS2B,eAAe,QAEhCxB,WAAY,ICAF,MACbA,UNJS,+VMMTR,cACEiC,WAAW/B,KAAKgC,YAAa,GAG/BA,YAAc,KACZhC,KAAKiC,UAAY9B,SAASmB,cAAc,sBACxC,MAAMZ,GAAW,IAAID,GAAWS,iBAChClB,KAAKiC,UAAU1B,OAAOG,MDVSJ,W","sources":["webpack://virtual-keyboard/./src/application/application.html","webpack://virtual-keyboard/./src/application/components/keyboard/keyCodes.js","webpack://virtual-keyboard/./src/application/components/keyboard/keyChars.js","webpack://virtual-keyboard/./src/application/components/button/Button.js","webpack://virtual-keyboard/./src/application/components/keyboard/Keyboard.js","webpack://virtual-keyboard/./src/index.js","webpack://virtual-keyboard/./src/application/application.js"],"sourcesContent":["// Module\nvar code = \"<header class=\\\"header\\\"> <div class=\\\"container\\\"> <h1 class=\\\"header__title\\\">Virtual Keyboard</h1> </div> </header> <main class=\\\"main\\\"> <div class=\\\"container\\\"> <textarea class=\\\"textarea\\\" id=\\\"textarea\\\" cols=\\\"45\\\" rows=\\\"8\\\"></textarea> </div> </main> <footer class=\\\"footer\\\"> <div class=\\\"container\\\"> <p class=\\\"footer__copy\\\">2022 &copy;</p> </div> </footer>\";\n// Exports\nexport default code;","const keyCodes = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace', 'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'Delete', 'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Enter', 'ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ArrowUp', 'ShiftRight', 'ControlLeft', 'MetaLeft', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'];\r\n\r\nexport { keyCodes };\r\n","const keyCharsSmallEn = ['`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace', 'Tab', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\\\\', 'Del', 'CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', '\\'', 'Enter', 'Shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '&uarr;', 'Shift', 'Ctrl', 'Win', 'Alt', '', 'Alt', '&larr;', '&darr;', '&rarr;', 'Ctrl'];\r\n\r\nexport { keyCharsSmallEn };\r\n","import { keyCodes } from '../keyboard/keyCodes.js';\r\nimport { keyCharsSmallEn } from '../keyboard/keyChars.js';\r\n\r\nexport default class Button {\r\n  constructor(index) {\r\n    this.index = index;\r\n  }\r\n\r\n  createButton() {\r\n    const key = document.createElement('div');\r\n    const symbol = document.createElement('span');\r\n    symbol.innerHTML = `${keyCharsSmallEn[this.index]}`;\r\n    key.append(symbol);\r\n    key.className = `keyboard__key ${keyCodes[this.index]}`;\r\n    return key;\r\n  }\r\n}\r\n","import Button from '../button/Button.js';\r\nimport { keyCodes } from './keyCodes.js';\r\n\r\nexport default class Keyboard {\r\n  constructor() {\r\n    this.keyboard = document.createElement('div');\r\n    this.addEventListeners();\r\n  }\r\n\r\n  addEventListeners = () => {\r\n    window.addEventListener('keydown', this.animatePressedButton);\r\n    window.addEventListener('keyup', this.animateUnpressedButton);\r\n    window.addEventListener('mousedown', this.animatePressedButtonClick);\r\n    window.addEventListener('mouseup', this.animateUnpressedButtonClick);\r\n    window.addEventListener('mouseout', this.animateUnpressedButtonClick);\r\n  }\r\n\r\n  createKeyboard = () => {\r\n    this.keyboard.className = 'keyboard keyboard__container';\r\n    keyCodes.forEach((code, index) => this.keyboard.append(new Button(index).createButton()));\r\n    return this.keyboard;\r\n  }\r\n\r\n  animatePressedButton = () => {\r\n    const button = this.keyboard.querySelector(`.keyboard__key.${event.code}`);\r\n    if (button) {\r\n      event.preventDefault();\r\n      button.classList.add('active');\r\n    }\r\n  }\r\n\r\n  animateUnpressedButton = () => {\r\n    const button = this.keyboard.querySelector(`.keyboard__key.${event.code}.active`);\r\n    if (button) {\r\n      event.preventDefault();\r\n      button.classList.remove('active');\r\n    }\r\n  }\r\n\r\n  animatePressedButtonClick = () => {\r\n    const button = event.target.closest(`.keyboard__key`);\r\n    if (button) {\r\n      event.preventDefault();\r\n      button.classList.add('active');\r\n    }\r\n  }\r\n\r\n  animateUnpressedButtonClick = () => {\r\n    const button = event.target.closest(`.keyboard__key`);\r\n    if (button) {\r\n      button.classList.remove('active');\r\n    }\r\n  }\r\n\r\n}\r\n","import Application from './application/application.js';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nroot.innerHTML = new Application().innerHTML;\r\n","import AppHTML from './application.html';\r\nimport '../styles/styles.scss';\r\nimport Keyboard from './components/keyboard/Keyboard.js';\r\n\r\nexport default class Application {\r\n  innerHTML = AppHTML;\r\n\r\n  constructor() {\r\n    setTimeout(this.addKeyboard, 0);\r\n  }\r\n\r\n  addKeyboard = () => {\r\n    this.container = document.querySelector('.main > .container');\r\n    const keyboard = new Keyboard().createKeyboard();\r\n    this.container.append(keyboard);\r\n  };\r\n}\r\n"],"names":["keyCodes","keyCharsSmallEn","Button","constructor","index","this","createButton","key","document","createElement","symbol","innerHTML","append","className","Keyboard","keyboard","addEventListeners","window","addEventListener","animatePressedButton","animateUnpressedButton","animatePressedButtonClick","animateUnpressedButtonClick","createKeyboard","forEach","code","button","querySelector","event","preventDefault","classList","add","remove","target","closest","getElementById","setTimeout","addKeyboard","container"],"sourceRoot":""}